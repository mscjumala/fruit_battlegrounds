local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Fruit | Battlegrounds", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})
local underground = false
local running = false
local selectedfruit = 'Barrier'
local timerdebounce = false

local plr = game:GetService('Players').LocalPlayer
local char = plr.Character

local minutes = 0
local hours = 0

local heartbeatdebounce = false

local runser = game:GetService('RunService')

local afkpart = Instance.new("Part", workspace)
afkpart.Anchored = true
afkpart.Size = Vector3.new(20,1,20)
afkpart.Position = Vector3.new(-800.893, 750.432, 100.6687)

for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    warn('AFK bypassed')
    v:Disable()
end



local function Paw()
    while running do 
		print('ok')   
        local args = {
            [1] = "Paw",
            [2] = "PressureCannon",
            [3] = {}
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end    
        local args = {
            [1] = "Paw",
            [2] = "SonicStomp",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.xAxis,
                    ["Direction"] = Vector3.new(-281.0707092285156, -19.477046966552734, 103.0528564453125),
                    ["Origin"] = Vector3.new(1005.0068969726562, 691.8860473632812, -113.85356140136719),
                    ["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
                    ["Distance"] = 62.83842849731445,
                    ["Material"] = Enum.Material.Foil,
                    ["Position"] = Vector3.new(946.1334228515625, 687.8063354492188, -92.26795959472656)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)        
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end 
        local args = {
            [1] = "Paw",
            [2] = "SumoThrustBarrage",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.xAxis,
                    ["Direction"] = Vector3.new(-295.1795349121094, -24.07211685180664, -47.84962844848633),
                    ["Origin"] = Vector3.new(991.8577270507812, 693.065185546875, -99.29689025878906),
                    ["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
                    ["Distance"] = 46.47101593017578,
                    ["Material"] = Enum.Material.Foil,
                    ["Position"] = Vector3.new(946.1334228515625, 689.3363037109375, -106.70895385742188)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)        
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
        local args = {
            [1] = "Paw",
            [2] = "Torture",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.xAxis,
                    ["Direction"] = Vector3.new(-288.1358642578125, -6.781805515289307, 83.25703430175781),
                    ["Origin"] = Vector3.new(989.3270263671875, 693.0791015625, -104.13453674316406),
                    ["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
                    ["Distance"] = 44.97212219238281,
                    ["Material"] = Enum.Material.Foil,
                    ["Position"] = Vector3.new(946.1334228515625, 692.0624389648438, -91.65371704101562)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
		local args = {
			[1] = "Paw",
			[2] = "UrsusShock",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.xAxis,
					["Direction"] = Vector3.new(-213.86656188964844, 16.883296966552734, 209.7046661376953),
					["Origin"] = Vector3.new(974.20166015625, 690.3969116210938, -101.36966705322266),
					["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
					["Distance"] = 39.37255096435547,
					["Material"] = Enum.Material.Foil,
					["Position"] = Vector3.new(946.1334228515625, 692.6127319335938, -73.84764099121094)
				}
			}
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
    end
end
local function Phoenix()
    while running do 
		local args = {
			[1] = "Phoenix",
			[2] = "Fujiazami",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.new(-38.420692443847656, 0.2693714201450348, -297.5294494628906),
					["Direction"] = Vector3.new(38.420692443847656, -0.2693714201450348, 297.5294494628906),
					["Position"] = Vector3.new(-868.2522583007812, 782.004150390625, -455.6460266113281),
					["Origin"] = Vector3.new(-906.6729736328125, 782.2734985351562, -753.1754760742188)
				}
			}
		}
		game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
		local args = {
			[1] = "Phoenix",
			[2] = "TalonSlam",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.yAxis,
					["Direction"] = Vector3.new(-70.1905288696289, -93.12411499023438, -276.40765380859375),
					["Origin"] = Vector3.new(-654.07763671875, 761.6755981445312, 85.4014892578125),
					["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
					["Distance"] = 34.61015701293945,
					["Material"] = Enum.Material.Slate,
					["Position"] = Vector3.new(-662.17529296875, 750.93212890625, 53.51310729980469)
				}
			}
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
		local args = {
			[1] = "Phoenix",
			[2] = "PhoenixInferno",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.yAxis,
					["Direction"] = Vector3.new(-83.35432434082031, -53.531246185302734, -283.1721496582031),
					["Origin"] = Vector3.new(-658.5992431640625, 760.1885986328125, 66.31901550292969),
					["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
					["Distance"] = 51.87514114379883,
					["Material"] = Enum.Material.Slate,
					["Position"] = Vector3.new(-673.0126342773438, 750.93212890625, 17.35369873046875)
				}
			}
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
		local args = {
			[1] = "Phoenix",
			[2] = "Bluebird",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.yAxis,
					["Direction"] = Vector3.new(-37.52671813964844, -74.64129638671875, -288.13262939453125),
					["Origin"] = Vector3.new(-665.056640625, 769.2688598632812, -23.60684585571289),
					["Instance"] = workspace:WaitForChild("Map"):WaitForChild("Part"),
					["Distance"] = 73.69940185546875,
					["Material"] = Enum.Material.Slate,
					["Position"] = Vector3.new(-674.275634765625, 750.93212890625, -94.39085388183594)
				}
			}
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
    end
end
local function Leopard()
	print('ok')
    while running do
        local args = {
            [1] = "Leopard",
            [2] = "AfterimageCombo",
            [3] = {}
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
        local args = {
        [1] = "Leopard",
        [2] = "SpiralKick",
        [3] = {}
        }

        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
        local args = {
        [1] = "Leopard",
        [2] = "ClawBarrage",
        [3] = {}
        }

        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
        local args = {
            [1] = "Leopard",
            [2] = "PredatorsProwl",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.yAxis,
                    ["Direction"] = Vector3.new(-133.15187072753906, -37.06306076049805, 266.2647399902344),
                    ["Origin"] = Vector3.new(1200.814453125, 689.5977172851562, -108.12744140625),
                    ["Instance"] = workspace:WaitForChild("Part"),
                    ["Distance"] = 33.16818618774414,
                    ["Material"] = Enum.Material.Plastic,
                    ["Position"] = Vector3.new(1186.0931396484375, 685.5, -78.68902587890625)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
    end
end
local function Barrier()
    while running do 
        local args = {
            [1] = "Barrier",
            [2] = "Barrier",
            [3] = {}
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end

		local args = {
			[1] = "Barrier",
			[2] = "Bubble",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.new(-220.99745178222656, 15.230993270874023, 202.3070831298828),
					["Direction"] = Vector3.new(220.99745178222656, -15.230993270874023, -202.3070831298828),
					["Position"] = Vector3.new(1192.0322265625, 677.5443725585938, -291.3684387207031),
					["Origin"] = Vector3.new(971.0347900390625, 692.775390625, -89.06136322021484)
				}
			}
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end

		local args = {
			[1] = "Barrier",
			[2] = "Crash",
			[3] = {
				["MouseRay"] = {
					["Normal"] = Vector3.new(-216.89193725585938, 36.10396957397461, 204.0940704345703),
					["Direction"] = Vector3.new(216.89193725585938, -36.10396957397461, -204.0940704345703),
					["Position"] = Vector3.new(1188.1895751953125, 656.6644897460938, -293.4293212890625),
					["Origin"] = Vector3.new(971.2976684570312, 692.7684326171875, -89.33524322509766)
				}
			}
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end

		local args = {
			[1] = "Barrier",
			[2] = "Spikes",
			[3] = {}
		}

		game:GetService("ReplicatedStorage"):WaitForChild("Replicator"):InvokeServer(unpack(args))
		wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
    end
end
local function Barrier()
    while running do 
        local args = {
            [1] = "TSRubber",
            [2] = "JetPistol",
            [3] = {}
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end     
        
        local args = {
            [1] = "TSRubber",
            [2] = "JetGatling",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.new(0.07433810085058212, 0.9944425821304321, -0.07455003261566162),
                    ["Direction"] = Vector3.new(85.12879180908203, -134.61668395996094, 254.2271270751953),
                    ["Origin"] = Vector3.new(399.7346496582031, 743.373046875, -687.5576782226562),
                    ["Instance"] = workspace:WaitForChild("SafeZones"):WaitForChild("Dressrosa"):WaitForChild("MainColor"),
                    ["Distance"] = 18.73426055908203,
                    ["Material"] = Enum.Material.Slate,
                    ["Position"] = Vector3.new(405.05072021484375, 734.966552734375, -671.6818237304688)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end        

        local args = {
            [1] = "TSRubber",
            [2] = "RedHawk",
            [3] = {}
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end        

        local args = {
            [1] = "TSRubber",
            [2] = "GrizzlyMagnum",
            [3] = {
                ["MouseRay"] = {
                    ["Normal"] = Vector3.yAxis,
                    ["Direction"] = Vector3.new(-68.82245635986328, -35.483360290527344, -289.8351135253906),
                    ["Origin"] = Vector3.new(1202.83251953125, 692.2440795898438, -94.09042358398438),
                    ["Instance"] = workspace:WaitForChild("Part"),
                    ["Distance"] = 57.0189323425293,
                    ["Material"] = Enum.Material.Plastic,
                    ["Position"] = Vector3.new(1189.751953125, 685.5, -149.17739868164062)
                }
            }
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("ReplicatorNoYield"):FireServer(unpack(args))
        wait(0.1)
		if underground then
			char:FindFirstChild('HumanoidRootPart').CFrame = afkpart.CFrame * CFrame.new(0,2,0) 
		end
    end
end

local AutofarmTab = Window:MakeTab({
	Name = "Auto Farm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local MiscTab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})



local XpFarmSection = AutofarmTab:AddSection({
	Name = "Xp Farm"
})
local MainMiscSection = MiscTab:AddSection({
	Name = "Main"
})



XpFarmSection:AddToggle({
	Name = "Enabled",
	Default = false,
	Callback = function(Value)
		print(Value)
		running = Value
		if Value == true then
			if selectedfruit == 'Paw' then
				Paw()
			elseif selectedfruit == 'Phoenix' then
				Phoenix()
			elseif selectedfruit == 'Flame' then
				Phoenix()
			elseif selectedfruit == 'Magma' then
				Phoenix()
			elseif selectedfruit == 'Leopard' then
				Leopard()
			elseif selectedfruit == 'Barrier' then
				Barrier()
			elseif selectedfruit == 'TSRubber' then

			end
		end
	end    
})

XpFarmSection:AddDropdown({
	Name = "Fruit",
	Default = "Select",
	Options = {"Paw", "Phoenix", 'Leopard', 'Barrier', 'TSRubber'},
	Callback = function(Value)
		print(Value)
		selectedfruit = Value
	end    
})	


XpFarmSection:AddLabel("Settings")


XpFarmSection:AddToggle({
	Name = "Underground",
	Default = false,
	Callback = function(Value)
		print(Value)
		underground = Value
	end    
})

XpFarmSection:AddToggle({
	Name = "Rendering",
	Default = true,
	Callback = function(Value)
		game:GetService("RunService"):Set3dRenderingEnabled(Value)
	end    
})

local InfoSection = AutofarmTab:AddSection({
	Name = "Info"
})

InfoSection:AddLabel("0 Levels Earned")
InfoSection:AddLabel("0 Gems Earned")

game:GetService("Players").LocalPlayer["MAIN_DATA"].Fruits:FindFirstChild(selectedfruit).Level.Changed:Connect(function()
	warn(game:GetService("Players").LocalPlayer["MAIN_DATA"].Fruits:FindFirstChild(selectedfruit).Level.Value)
	CoolLabel:Set("Label New!")
end)

MainMiscSection:AddButton({
	Name = "Unload",
	Callback = function()
		OrionLib:Destroy()
		running = false
  	end    
})

OrionLib:MakeNotification({
	Name = "Anti Afk",
	Content = "Anti Afk Is Now Loaded",
	Image = "rbxassetid://4483345998",
	Time = 5
})


runser.Heartbeat:Connect(function()
	if heartbeatdebounce == false then
		local Level = plr:FindFirstChild("MAIN_DATA").Fruits:FindFirstChild(selectedfruit).Level
		local Gems = plr:FindFirstChild("MAIN_DATA").Gems
		local Xp = plr:FindFirstChild("MAIN_DATA").Fruits:FindFirstChild(selectedfruit).EXP
		print('webhook launched')
		heartbeatdebounce = true
		local Webhook = "https://discord.com/api/webhooks/1152528497814818816/Fj8ybaTAEdUJI6DT2buZTdwDmpdD4UWS5-wdZpy6YBbRM7ZuvH-OiS_UluvmOVYc6vo7" -- your webhook
		_G.Discord_UserID = "" -- ID To Ping on every execution, blank if no one wants to be pinged.

		local player = game:GetService"Players".LocalPlayer
		local joinTime = os.time() - (player.AccountAge*86400)
		local joinDate = os.date("!*t", joinTime)
		local premium = false
		local alt = true
		if player.MembershipType == Enum.MembershipType.Premium then
		premium = true
		end

		if not premium and player.AccountAge >= 70 then
			alt = "Possible"
		elseif premium and player.AccountAge >= 70 then
		alt = false
		end

		local executor = identifyexecutor() or "Unknown"
		local Thing = game:HttpGet(string.format("https://thumbnails.roblox.com/v1/users/avatar?userIds=%d&size=180x180&format=Png&isCircular=true", game.Players.LocalPlayer.UserId))
		Thing = game:GetService("HttpService"):JSONDecode(Thing).data[1]
		local AvatarImage = Thing.imageUrl
		local msg = {
		["username"] = "Fruit Battlegrounds",
		["avatar_url"] = "https://cdn.discordapp.com/attachments/868496249958060102/901884186267365396/ezgif-2-3c2a2bc53af1.gif",
		["content"] = ( _G.Discord_UserID ~= "" and  _G.Discord_UserID ~= nil) and tostring("<@".._G.Discord_UserID..">") or " ",
		["embeds"] = {
			{
				["color"] = tonumber(tostring("0x32CD32")), --decimal
				["title"] = "Farming",
				["thumbnail"] = {
					["url"] = AvatarImage,
				},
				["fields"] = {
						{
						["name"] = "Username",
						["value"] = "||"..player.Name.."||",
						["inline"] = true
						},
						{
						["name"] = "Display Name",
						["value"] = player.DisplayName,
						["inline"] = true
						},
						{
						["name"] = "UID",
						["value"] = "||["..player.UserId.."](" .. tostring("https://www.roblox.com/users/" .. game.Players.LocalPlayer.UserId .. "/profile")..")||",
						["inline"] = true
						},
						{
						["name"] = "Minutes",
						["value"] = tostring(minutes),
						["inline"] = true
						},
						{
						["name"] = "Hours",
						["value"] = tostring(hours),
						["inline"] = true
						},
						{
						["name"] = "Executor Used",
						["value"] = executor,
						["inline"] = true
						},
						{
						["name"] = "Level",
						["value"] = tostring(Level.Value),
						["inline"] = true
						},
						{
						["name"] = "Gems",
						["value"] = tostring(Gems.Value),
						["inline"] = true
						},
						{
						["name"] = "Xp",
						["value"] = tostring(Xp.Value),
						["inline"] = true
						},
				},
				['timestamp'] = os.date("%Y-%m-%dT%X.000Z")
			}
		}
		}

		request = http_request or request or HttpPost or syn.request
		request({Url = Webhook, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = game.HttpService:JSONEncode(msg)})
		wait(600)
		heartbeatdebounce = false
	end
end)

runser.Heartbeat:Connect(function()
	if timerdebounce == false then
		timerdebounce = true
		print('minutes '..minutes)
		print('hours '..hours)
		if minutes <= 60 then
			minutes += 1	
		else
			minutes = 1
			hours += 1
		end
		wait(60)
		timerdebounce = false
	end
end)


OrionLib:Init()






